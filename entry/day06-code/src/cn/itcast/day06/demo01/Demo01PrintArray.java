package cn.itcast.day06.demo01;

/*
面向对象
    面相对象编程的思想：将程序模块化的思想。
    1.什么是面相对象？
        面相对象思想诞生之前，程序开发采用的是面相过程结构化编程方式，是一种面向功能划分的软件结构。
        最小粒度细化到方法这一层。
        面向过程注重的是每一个步骤，面向对象关注点在于整件事情的模块化结构。
    2.类和对象
        类和对象的关系
        每个对象都有特定的特征：a.属性; b.方法。
        属性指的是对象的静态特征，方法用来描述对象的动态特征。
        对象是用来描述客观存在的一个实体，该实体是由一组属性和方法构成。
        类是与对象紧密结合的另外一个概念，类是产生对象的模板，所有的对象都是通过类来创建的。
        二者之间的关系：类是对象的抽象化描述，这些对象具有相同的特征和动作（属性和方法），
                      对象是类的具体实例。
        Java程序是以类为组织单元，程序运行时的主体是通过创建具体的对象。

面向过程：当需要实现一个功能的时候，每一个具体的步骤都需要亲力亲为，详细处理每一步。
面向对象：当需要实现一个功能的时候，不关心具体步骤，而是找一个已经具备该功能的类的方法，实现这个功能。
*/

import java.util.Arrays;

public class Demo01PrintArray {
    public static void main(String[] args) {
        int[] array = { 10, 20, 30, 40, 50 };

        // 要求打印格式为：[10, 20, 30, 40, 50]
        // 使用面向过程，每一个步骤细节都要亲力亲为
//        System.out.print("[");
//        for (int i = 0; i < array.length; i++) {
//            if( i == array.length - 1 ) {
//                System.out.println(array[i] + "]");
//            } else {
//                System.out.print(array[i] + ", ");
//            }
//        }
        System.out.println("============");

        // 使用面相对象
        // 找一个JDK给我们提供好的Arrays类
        // 其中有一个toString方法，直接能把数组变成想要的字符串格式
        System.out.println(Arrays.toString(array));
    }
}
