MySQL基础笔记

今日内容
    1.数据库的基本概念

    2.MySQL数据库软件
        a.安装
        b.卸载
        c.配置

    3.SQL

数据库的基本概念
    1.数据库的英文单词：DataBase 简称：DB

    2.什么是数据库？
        用于存储和管理数据的仓库。

    3.数据库的特点：
        a.可持久化存储数据。其实就是一个文件系统
        b.方便存储和管理数据
        c.使用了统一的方式操作数据库 -- SQL

    4.常见的数据库软件：MySql、Oracle
        参见《MySQL基础.pdf》文档

MySql数据库软件
        a.安装
            参见《MySQL基础.pdf》文档
            问题1：-bash: mysql: command not found
            解决方式：
            	1.查看mysql是否已安装（路径：/usr/local/mysql）
            	2.如果mysql已安装，则需要配置环境变量
            		a.打开profile文件，路径/etc/profile
            		c.配置如下代码
            			# 关于MySQL
            			MYSQL_HOME=/usr/local/mysql
            			PATH=$PATH:$MYSQL_HOME/bin
            			export PAHT MYSQL_HOME
            	    d.配置完，保存退出，然后执行source /etc/prifile重新加载配置文件即可。

            问题2：ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)
            解决方式1：
            	1.在mac系统中配置文件是mysql安装目录support_file下的my-default文件，在找到[mysqld]项，然后在该项下添加skip-grant-tables这个配置，然后保存文件。
            		ps:windows系统的配置文件是mysql安装根目录的my.ini文件
            	2.重启mysql。
            		MAC下启动MySQL服务：sudo /usr/local/mysql/support-files/mysql.server start
            	3.再次执行 mysql -h127.0.0.1 -uroot -p 提示输入密码，直接回车可以登录成功了。
            解决方式2：
            	1.执行 sudo /usr/local/mysql/support-files/mysql.server stop 关闭mysql
            	2.执行 sudo /usr/local/mysql/bin/mysqld_safe --skip-grant-tables 跳过安全检查，添加如下配置信息：
            		mysql -u root
            		UPDATE mysql.user SET authentication_string=PASSWORD('root') WHERE user='root';
            		FLUSH PRIVILEGES
            		\q
                3.添加完之后按control+z键结束输入
                4.再次执行 mysql -h127.0.0.1 -uroot -p 提示输入密码，直接回车可以登录成功了。

            解决办法参考网址：https://blog.csdn.net/u011078141/article/details/89051984

            在Mac OS X启动和停止MySQL服务的命令

            启动MySQL服务：sudo /usr/local/mysql/support-files/mysql.server start

            停止MySQL服务：sudo /usr/local/mysql/support-files/mysql.server stop

            重启MySQL服务：sudo /usr/local/mysql/support-files/mysql.server restart

            ps -ef | grep 要查看的进程程序
            ps：查看进程命令
            -e：显示所有进程
            f：全格式
            -ef：标准格式展示
            |：管道命令（ps命令和grep同时执行）
            grep：文本搜索工具

            kill -9 要终止的PID
            kill：终止命令
            -9：信号编号（ 9）SIGKILL ）
        b.卸载
            windows系统：
                1.去MySQL的安装目录找到my.ini文件
                    复制：datadir="C:/ProgramData/MySQL/MySQL Server 5.5/Data/"
                2.卸载MySQL
                3.删除C:/ProgramData目录下的MySQL文件夹。
            MAC：
                1.卸载MySQL
                2.删除/usr/local目录下的mysql文件夹
        c.配置
            MySQL服务启动
                1.手动
                2.cmd --> services.msc 打开服务的窗口
                3.使用管理员打开cmd
                    net start mysql：启动mysql的服务
                    net stop mysql：关闭mysql服务

            MSQL登录
                1.mysql -uroot -p密码
                2.mysql -hip -uroot -p连接目标的密码
                3.mysql --host=ip --user=root --password=连接目标的密码

            MySQL退出
                1.exit
                2.quit
            MySQL目录结构
                1.MySQL安装目录
                    配置文件 my.ini
                2.MySQL数据目录
                    几个概念
                        数据库：文件夹
                        表：文件
                        数据：数据（文件里的内容）

SQL
    1.什么是SQL？
        Structured Query Language：结构化查询语言
        其实就是定义了操作所有关系数据库的规则。每一种数据操作的方式存在不一样的地方，称为“方言”。

    2.SQL通用语法
        1.SQL语句可以单行或多行书写，以分号结尾。
        2.可以使用空格和缩进来增强语句的可读性。
        3.MySQL数据库的SQL语句不区分大小写，关键字建议使用大写。
        4.3种注释
            单行注释：-- 注释内容 或 # 注释内容（mysql特有）
            多行注释：/* 注释内容 */

    3.SQL分类
        1) DDL(Data Definition Language)数据定义语言
            用来定义数据库对象：数据库，表，列等。关键字：create, drop,alter 等
        2) DML(Data Manipulation Language)数据操作语言
            用来对数据库中表的数据进行增删改。关键字：insert, delete, update 等
        3) DQL(Data Query Language)数据查询语言
            用来查询数据库中表的记录(数据)。关键字：select, where 等
        4) DCL(Data Control Language)数据控制语言(了解)
            用来定义数据库的访问权限和安全级别，及创建用户。关键字：GRANT， REVOKE 等

    4.DDL操作数据库、表
        * 操作数据库：CRUD
            a.C（Create）：创建
                * 创建数据库：
                    CREATE DATABASE 数据库名称;
                * 创建数据库，判断不存在再创建：
                    CREATE DATABASE IF NOT EXISTS 数据库名称;
                * 创建数据库，并指定字符集：
                    CREATE DATABASE 数据库名称 CHARACTER SET 字符集名称;
                * 练习：创建db2数据库，判断不存在再创建，并指定字符集为utf-8：
                    CREATE DATABASE IF NOT EXISTS db2 CHARACTER SET utf8;
            b.R（Retrieve）：查询
                * 查询所有数据库的名称：
                    SHOW DATABASES;
                * 查询某个数据库的字符集：查询某个数据库的创建语句
                    SHOW CREATE DATABASE 数据库名称;
            c.U（Update）：修改
                * 修改数据库的字符集
                    ALTER DATABASE 数据库名称 CHARACTER SET 字符集名称;
            d.D（Delete）：删除
                * 删除数据库
                    DROP DATABASE 数据库名称;
                * 判断数据库存在，再删除
                    DROP DATABASE IF NOT 数据库名称;
            e.使用数据库
                *使用数据库
                    USE 数据库名称;
                * 查询当前正在使用的数据库名称
                    SELECT DATABASE();

        * 操作表
            a.C（Create）：创建
                1.语法：
                    CREATE TABLE 表名(
                        列名1 数据类型1,
                        列名2 数据类型2,
                        ...
                        列名n 数据类型n
                    );
                    * 注意：最后一列，不需要加逗号（,）
                    * 数据库类型
                        1).int：整数类型
                            * age int
                        2).double：小数类型
                            * score double(5,2)：数值长度为5，并保留2位小数点
                        3).date 日期，只包含年月日 yyyy-MM-dd
                        4).datetime：日期，包含年月日时分秒 yyyy-MM-dd HH:mm:ss
                        5).timestamp：时间戳 包含年月日时分秒 yyyy-MM-dd HH:mm:ss
                        6).varchar：字符串
                            * name varchar(20)：姓名最大为20个字符
                            zhangsan 8个字符 张三 2个字符

                2.创建表
                    CREATE TABLE student (
                        id int,
                        name varchar(32),
                        age int,
                        score double(4,1),
                        birthday date,
                        insert_time timestamp
                    );
                 3.复制表
                    CREATE TABLE 表名 LIKE 被复制的表名;
            b.R（Retrieve）：查询
                * 查询某个数据库中所有的表名称
                    SHOW TABLES;
                * 查询表结构
                    DESC 表名;
            c.U（Update）：修改
                1.修改表名
                    ALTER TABLE 表名 RENAME TO 新表名;
                2.修改表的字符集（查看表的字符集，可执行查看创建表的语句查看：SHOW CREATE TABLE 表名;）
                    ALTER TABLE 表名 CHARACTER SET 字符集名称;
                3.添加一列
                    ALTER TABLE 表名 ADD 列名 数据类型;
                4.修改列名称 类型
                    ALTER TABLE 表名 CHANGE 列名 新列名 新数据类型;
                    ALTER TABLE 表名 MODIFY 列名 新数据类型;
                5.删除列
                    ALTER TABLE 表名 DROP 列名;
            d.D（Delete）：删除
                * DROP TABLE 表名;
                * DROP TABLE IF EXISTS 表名;

    5.客户端图形化工具：SQLYog

    6.DML增删改表中数据
        1).添加数据：
            * 语法：
                INSERT INTO 表名 (列名1,列名2,列名3,...列名n) VALUES (值1,值2,值3,...值n);
            * 注意：
                a.列名和值要一一对应
                b.如果表名后，不定义列名，则默认给所有列添加值（平时不建议这么做）
                    INSERT INTO 表名 VALUES (值1,值2,值3,...值n);
                c.除了数字类型，其他类型需要使用引号（单双都可以）引起来
        2).删除数据：
            * 语法：
                DELETE FROM 表名 [WHERE 条件];
            * 注意：
                a.如果不加条件，则删除表中所有记录。
                b.如果要删除所有记录
                    b1. DELETE FROM 表名; -- 不推荐使用。有多少条记录就会执行多少次删除操作（会执行n次SQL），效率低。
                    b2. TRUNCATE TABLE 表名; -- 推荐使用。效率高（只执行2次SQL），先删除表，再创建一张一样的表。
        3).修改数据：
            * 语法：
                UPDATE 表名 SET 列名1 = 值1, 列名2 = 值2, 列名3 = 值3,...列名n = 值n [WHERE 条件];
            * 注意：
                1.如果不加任何条件，会修改表中全部记录。

         练习记录：
            use db1;
            show tables;
            desc stu;

            -- 查询stu表的所有数据
            select * from stu;

            -- 给stu表添加数据
            insert into stu (id,name,age,score) values (2,'王丽坤',26,80);
            insert into stu (id,name,age,score) values (3,'迪丽热巴',25,86), (4,'古力娜扎',24,86);

            -- 添加数据省略列名例子
            insert into stu values (5,'李易峰',28,82,null,null);

            -- 删除表中所有数据
            delete from stu;

            -- 删除表中所有数据 推荐
            truncate table stu;

            -- 删除指定id的数据
            delete from stu where id = 2;

            -- 修改id为2的年龄
            update stu set age = 20 where id = 2;
            update stu set name = '高圆圆', age = 30 where id = 4;
            update stu set age = 20;

    7.DQL查询表中的记录
        SELECT * FROM 表名;
        1).语法：
            select
                字段列表
            from
                表名列表
            where
                条件列表
            group by
                分组字段
            having
                分组之后的条件
            order by
                排序
            limit
                分页限定
        2).基础查询
            准备数据：
                -- 创建一个学生表
                CREATE TABLE student (
                	id int, -- 编号
                	name varchar(20), -- 姓名
                	age int, -- 年龄
                	sex varchar(5), -- 性别
                	address varchar(100), -- 地址
                	math int, -- 数学
                	english int -- 英语
                );

                INSERT INTO student (id,name,age,sex,address,math,english) VALUES
                (1,'马云',55,'男','杭州',66,78),(2,'马化腾',45,'男','深圳',98,87),
                (3,'马景涛',55,'男','香港',56,77),(4,'柳岩',20,'女','湖南',76,65),
                (5,'柳青',20,'男','湖南',86,null),(6,'刘德华',57,'男','香港',99,99),
                (7,'马德',22,'女','香港',99,99),(8,'德玛西亚',18,'男','南京',56,65);

            a.多个字段查询
                SELECT 字段名1,字段名2,...FROM 表名;
                * 注意：
                    如果查询所有字段，则可以使用*来代替字段列表。
            b.去除重复
                DISTINCT
            c.计算列
                * 一般可以使用四则运算计算一些列的值。（一般只会进行数值型的计算）
                * ifnull(表达式1，表达式2)：null参与的运算，计算结果都为null
                    表达式1：哪个字段需要判断是否为空
                    表达式2：如果该字段为空后的替换值
            d.起别名
                as：as 也可以省略

            练习记录：
                use db1;
                show tables;

                select * from student;

                -- 查询学生姓名和年龄
                SELECT name,age from student;
                select address from student;

                -- 去除重复的地址
                select distinct address from student;
                select distinct name,address from student;

                -- 计算math和english分数之和
                select name,math,english,math+english from student;

                -- 有null参与的运算，计算结果都为null
                select name,math,english,math+ifnull(english,0) from student;

                -- 起别名
                select name,math,english,math+ifnull(english,0) as 总分 from student;
                select name 姓名,math 数学,english 英语,math+ifnull(english,0) as 总分 from student;
        3).条件查询
            a.where子句后跟条件
            b.运算符
                * > 、< 、<= 、 >= 、= 、<>
                * BETWEEN...AND
                * IN(集合)
                * LIKE  -- 模糊查询
                    占位符：
                        _：单个任意字符
                        %：多个任意字符
                * IS NULL
                * AND 或 &&
                * OR 或 ||
                * NOT 或 !

             练习记录：
                use db1;
                show tables;

                select * from student;

                -- 查询年龄大于20岁
                select * from student where age > 20;
                select * from student where age >= 20;

                -- 查询年龄等于20岁
                select * from student where age = 20;

                -- 查询年龄不等于20岁
                select * from student where age !=20;
                select * from student where age <> 20;

                -- 查询年龄大于等于20 小于等于30
                select * from student where age >= 20 && age <= 30;
                select * from student where age >= 20 and age <= 30;
                select * from student where age between 20 and 30;

                -- 查询年龄22岁，18岁，25岁的学生
                select * from student where age = 22 or age = 18 or age = 25;
                select * from student where age in(22,18,25);

                -- 查询英语成绩为null
                select * from student where english = null; -- 错误写法！null值不能使用=(!=)判断
                select * from student where english is null;

                -- 查询英语成绩不问哦null
                select * from student where english is not null;

                -- 查询姓马的有哪些？ like
                select * from student where name like "马%";

                -- 查询第二个字是化的人
                select * from student where name like "_化%";

                -- 查询姓名是3个字的人
                select * from student where name like "___";

                -- 查询姓名中包含德的人
                select * from student where name like "%德%";




